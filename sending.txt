#include <VirtualWire.h>
#include <SFE_BMP180.h>
#include <Wire.h>
#include "LowPower.h"
#include "DHT.h"
#define DHTPIN 8     // what pin we're connected to
#define DHTTYPE DHT11   // DHT 11 
DHT dht(DHTPIN, DHTTYPE);
SFE_BMP180 pressure;
int ledPin = 13;
char Msg[30];// The string that we are going to send trought rf transmitter 

#define ALTITUDE 75
 
void setup() 
{
  Serial.begin(9600);
  Wire.begin();
  if (pressure.begin())
    Serial.println("BMP180 Dziala");
  else
  {
    Serial.println("BMP180 error");
    while(1); // Pause forever.
  }
  dht.begin();  // initialing the DHT sensor
  pinMode(ledPin,OUTPUT);
  // VirtualWire setup
  vw_setup(2000); // Bits per sec
  vw_set_tx_pin(12);// Set the Tx pin. Default is 12
}
 
void loop() 

{  
  char status;
  double T,P,p0,a;

  status = pressure.startTemperature();
  if (status != 0)
  {
    // Wait for the measurement to complete:
    delay(status);
    status = pressure.getTemperature(T);
    if (status != 0)
    { 
      status = pressure.startPressure(3);
      if (status != 0)
      {
        delay(status);
        status = pressure.getPressure(P,T);
        if (status != 0)
        {
          p0 = pressure.sealevel(P,ALTITUDE); // we're at 1655 meters (Boulder, CO)
          a = pressure.altitude(P,p0);
        }
        else Serial.println("error retrieving pressure measurement\n");
      }
      else Serial.println("error starting pressure measurement\n");
    }
    else Serial.println("error retrieving temperature measurement\n");
  }
  else Serial.println("error starting temperature measurement\n");

  int sensorValue = analogRead(A0);
  int jas = (sensorValue);
  int cis = (P);
  int wil = dht.readHumidity();
  int tem = dht.readTemperature();
  int f = dht.readTemperature(true);
  sprintf(Msg, "%d,%d,%d,%d", wil,tem,cis,jas);
 // Turn on a light to show transmitting
  digitalWrite(ledPin, HIGH); 
  delay(1000); 
  vw_send((uint8_t *)Msg, strlen(Msg));
  vw_wait_tx(); // Wait until the whole message is gone
 // Turn off a light after transmission
  digitalWrite(ledPin, LOW); 
  delay(4000);
}